name: 'build-test'
on:
  pull_request:
  push:
    branches:
      - master
      - 'releases/*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check build
        run: |
          npm install
          npm run all

  test:
    runs-on: windows-latest
    strategy:
      matrix:
        version: [latest, included]
        update: [update, no-update]
        clean-path: [clean-path, dirty-path]
        use-msvc: [msvc, no-msvc]
    steps:
      - uses: actions/checkout@v2
      - name: Setup MSVC-MSYS2
        uses: ./
        with:
          version: ${{ matrix.version }}
          update: ${{ matrix.update == 'update' }}
          clean-path: ${{ matrix.clean-path == 'clean-path' }}
          use-msvc: ${{ matrix.use-msvc == 'msvc' }}
          shell-name: msys2
      - name: Add dummy value to path
        run: |
          echo "::add-path::DUMMY_VALUE"
        shell: bash
      - name: Run script using MSYS2
        run: |
          echo "Hello from MSYS2!"
          ./test.sh
        shell: msys2 {0}
        working-directory: .github/workflows
        env:
          EXPECT_CLEAN_PATH: ${{ matrix.clean-path == 'clean-path' }}
          EXPECT_MSVC: ${{ matrix.use-msvc == 'msvc' }}
      - name: Run script using MSYS2 and environment overrides
        run: |
          echo "Hello from MSYS2!"
          ./test.sh
        shell: msys2 {0}
        working-directory: .github/workflows
        env:
          CLEAN_PATH: ${{ matrix.clean-path == 'dirty-path' }}
          USE_MSVC: ${{ matrix.use-msvc == 'no-msvc' }}
          EXPECT_CLEAN_PATH: ${{ matrix.clean-path == 'dirty-path' }}
          EXPECT_MSVC: ${{ matrix.use-msvc == 'no-msvc' }}
